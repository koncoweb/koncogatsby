{"version":3,"file":"3cfb4400954a7280692a369009ab5509c5524cc6-a8a7ba8291962a6a9b8f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicCheckbox.module.css","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__Squaresvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__SquareCheckFilledsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__SquareMinussvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicCheckbox.jsx","webpack://gatsby-starter-default/./src/components/Checkbox.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicTextInput.module.css","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__Searchsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicTextInput.jsx","webpack://gatsby-starter-default/./src/components/TextInput.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpg.jpeg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var __wab_slot = \"PlasmicCheckbox-module--__wab_slot--aSiYu\";\nexport var __wab_slotStringWrapper = \"PlasmicCheckbox-module--__wab_slot-string-wrapper--Wdzmi\";\nexport var __wab_text = \"PlasmicCheckbox-module--__wab_text--RyY9d\";\nexport var freeBox = \"PlasmicCheckbox-module--freeBox--zgemW\";\nexport var freeBox___focusVisibleWithin = \"PlasmicCheckbox-module--freeBox___focusVisibleWithin--dqmTR\";\nexport var labelContainer = \"PlasmicCheckbox-module--labelContainer--vpK-L\";\nexport var labelContainer___focusVisibleWithin = \"PlasmicCheckbox-module--labelContainer___focusVisibleWithin--9mywK\";\nexport var root = \"PlasmicCheckbox-module--root--RKftz\";\nexport var root___focusVisibleWithin = \"PlasmicCheckbox-module--root___focusVisibleWithin--vMcmR\";\nexport var rootisChecked = \"PlasmicCheckbox-module--rootisChecked--epwQr\";\nexport var rootisDisabled = \"PlasmicCheckbox-module--rootisDisabled--uWl9E\";\nexport var rootisIndeterminate = \"PlasmicCheckbox-module--rootisIndeterminate--viVUc\";\nexport var slotTargetChildren = \"PlasmicCheckbox-module--slotTargetChildren--AjC7Y\";\nexport var slotTargetChildren___focusVisibleWithin = \"PlasmicCheckbox-module--slotTargetChildren___focusVisibleWithin--JjQLO\";\nexport var svg = \"PlasmicCheckbox-module--svg--qNJVL\";\nexport var svg___focusVisibleWithin = \"PlasmicCheckbox-module--svg___focusVisibleWithin--Hhm2h\";\nexport var svgisChecked = \"PlasmicCheckbox-module--svgisChecked--Bn0bB\";\nexport var svgisDisabled = \"PlasmicCheckbox-module--svgisDisabled--ioOax\";\nexport var svgisIndeterminate = \"PlasmicCheckbox-module--svgisIndeterminate--Ez7Xd\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SquaresvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        stroke: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M17.25 19.25H6.75a2 2 0 01-2-2V6.75a2 2 0 012-2h10.5a2 2 0 012 2v10.5a2 2 0 01-2 2z\"\n        }\n        stroke={\"currentColor\"}\n        strokeWidth={\"1.5\"}\n        strokeLinecap={\"round\"}\n        strokeLinejoin={\"round\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default SquaresvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SquareCheckFilledsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M6.75 4A2.75 2.75 0 004 6.75v10.5A2.75 2.75 0 006.75 20h10.5A2.75 2.75 0 0020 17.25V6.75A2.75 2.75 0 0017.25 4H6.75zm9.045 6.265a.75.75 0 00-1.09-1.03l-3.72 3.939L9.28 11.47a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.075-.015l4.25-4.5z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default SquareCheckFilledsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SquareMinussvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        stroke: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M17.25 19.25H6.75a2 2 0 01-2-2V6.75a2 2 0 012-2h10.5a2 2 0 012 2v10.5a2 2 0 01-2 2zm-3-7.25h-4.5\"\n        }\n        stroke={\"currentColor\"}\n        strokeWidth={\"1.5\"}\n        strokeLinecap={\"round\"}\n        strokeLinejoin={\"round\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default SquareMinussvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: L2k-RkkWzfKy4S\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicCheckbox.module.css\" // plasmic-import: L2k-RkkWzfKy4S/css\nimport SquaresvgIcon from \"./icons/PlasmicIcon__Squaresvg\" // plasmic-import: ktPYzhOqn8itaa/icon\nimport SquareCheckFilledsvgIcon from \"./icons/PlasmicIcon__SquareCheckFilledsvg\" // plasmic-import: qz7BjojwEkMjR0/icon\nimport SquareMinussvgIcon from \"./icons/PlasmicIcon__SquareMinussvg\" // plasmic-import: ha70iMDggX9KXp/icon\n\nexport const PlasmicCheckbox__VariantProps = new Array(\n  \"noLabel\",\n  \"isDisabled\",\n  \"isChecked\",\n  \"isIndeterminate\"\n)\n\nexport const PlasmicCheckbox__ArgProps = new Array(\"children\", \"name\", \"value\")\n\nfunction PlasmicCheckbox__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: false,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootisChecked]: hasVariant(variants, \"isChecked\", \"isChecked\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootisIndeterminate]: hasVariant(\n            variants,\n            \"isIndeterminate\",\n            \"isIndeterminate\"\n          ),\n\n          [sty.rootnoLabel]: hasVariant(variants, \"noLabel\", \"noLabel\"),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(projectcss.all, sty.freeBox, {\n          [sty.freeBox___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.freeBoxisChecked]: hasVariant(\n            variants,\n            \"isChecked\",\n            \"isChecked\"\n          ),\n\n          [sty.freeBoxisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.freeBoxisIndeterminate]: hasVariant(\n            variants,\n            \"isIndeterminate\",\n            \"isIndeterminate\"\n          ),\n\n          [sty.freeBoxnoLabel]: hasVariant(variants, \"noLabel\", \"noLabel\"),\n        })}\n      >\n        {(\n          hasVariant(variants, \"isIndeterminate\", \"isIndeterminate\")\n            ? true\n            : hasVariant(variants, \"isChecked\", \"isChecked\")\n            ? true\n            : true\n        ) ? (\n          <p.PlasmicIcon\n            data-plasmic-name={\"svg\"}\n            data-plasmic-override={overrides.svg}\n            PlasmicIconType={\n              hasVariant(variants, \"isIndeterminate\", \"isIndeterminate\")\n                ? SquareMinussvgIcon\n                : hasVariant(variants, \"isChecked\", \"isChecked\")\n                ? SquareCheckFilledsvgIcon\n                : SquaresvgIcon\n            }\n            className={classNames(projectcss.all, sty.svg, {\n              [sty.svg___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n              [sty.svgisChecked]: hasVariant(\n                variants,\n                \"isChecked\",\n                \"isChecked\"\n              ),\n\n              [sty.svgisDisabled]: hasVariant(\n                variants,\n                \"isDisabled\",\n                \"isDisabled\"\n              ),\n\n              [sty.svgisIndeterminate]: hasVariant(\n                variants,\n                \"isIndeterminate\",\n                \"isIndeterminate\"\n              ),\n\n              [sty.svgnoLabel]: hasVariant(variants, \"noLabel\", \"noLabel\"),\n            })}\n            role={\"img\"}\n          />\n        ) : null}\n      </div>\n\n      {(hasVariant(variants, \"noLabel\", \"noLabel\") ? false : true) ? (\n        <div\n          data-plasmic-name={\"labelContainer\"}\n          data-plasmic-override={overrides.labelContainer}\n          className={classNames(projectcss.all, sty.labelContainer, {\n            [sty.labelContainer___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.labelContainerisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.labelContainernoLabel]: hasVariant(\n              variants,\n              \"noLabel\",\n              \"noLabel\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: \"Enter some text\",\n            value: args.children,\n            className: classNames(sty.slotTargetChildren, {\n              [sty.slotTargetChildren___focusVisibleWithin]:\n                triggers.focusVisibleWithin_root,\n              [sty.slotTargetChildrenisChecked]: hasVariant(\n                variants,\n                \"isChecked\",\n                \"isChecked\"\n              ),\n\n              [sty.slotTargetChildrenisDisabled]: hasVariant(\n                variants,\n                \"isDisabled\",\n                \"isDisabled\"\n              ),\n\n              [sty.slotTargetChildrenisIndeterminate]: hasVariant(\n                variants,\n                \"isIndeterminate\",\n                \"isIndeterminate\"\n              ),\n\n              [sty.slotTargetChildrennoLabel]: hasVariant(\n                variants,\n                \"noLabel\",\n                \"noLabel\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  if (!(\"children\" in props)) {\n    props = {\n      ...props,\n      children: \"Enter some text\",\n    }\n  }\n  return pp.useCheckbox(\n    PlasmicCheckbox,\n    props,\n    {\n      isCheckedVariant: { group: \"isChecked\", variant: \"isChecked\" },\n      isIndeterminateVariant: {\n        group: \"isIndeterminate\",\n        variant: \"isIndeterminate\",\n      },\n\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      noLabelVariant: { group: \"noLabel\", variant: \"noLabel\" },\n      labelSlot: \"children\",\n      root: \"root\",\n    },\n\n    ref\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\", \"svg\", \"labelContainer\"],\n  freeBox: [\"freeBox\", \"svg\"],\n  svg: [\"svg\"],\n  labelContainer: [\"labelContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicCheckbox__ArgProps,\n          internalVariantPropNames: PlasmicCheckbox__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicCheckbox__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCheckbox\"\n  } else {\n    func.displayName = `PlasmicCheckbox.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCheckbox = Object.assign(\n  // Top-level PlasmicCheckbox renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    svg: makeNodeComponent(\"svg\"),\n    labelContainer: makeNodeComponent(\"labelContainer\"),\n    // Metadata about props expected for PlasmicCheckbox\n    internalVariantProps: PlasmicCheckbox__VariantProps,\n    internalArgProps: PlasmicCheckbox__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicCheckbox\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicCheckbox } from \"./plasmic/saa_s_website/PlasmicCheckbox\"\n\nfunction Checkbox_(props, ref) {\n  const { plasmicProps, state } = PlasmicCheckbox.useBehavior(props, ref)\n  return <PlasmicCheckbox {...plasmicProps} />\n}\n\nconst Checkbox = React.forwardRef(Checkbox_)\n\nexport default Object.assign(Checkbox, {\n  __plumeType: \"checkbox\",\n})\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: GiBoz5mPYbhbH5\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Header2 from \"../../Header2\" // plasmic-import: k7o7R5KA05BDU1/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: GiBoz5mPYbhbH5/css\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        <Header2\n          data-plasmic-name={\"header2\"}\n          data-plasmic-override={overrides.header2}\n          className={classNames(\"__wab_instance\", sty.header2)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\", \"header2\"],\n  freeBox: [\"freeBox\", \"header2\"],\n  header2: [\"header2\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeader__ArgProps,\n          internalVariantPropNames: PlasmicHeader__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    header2: makeNodeComponent(\"header2\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox = \"PlasmicHeader-module--freeBox--JX88q\";\nexport var header2 = \"PlasmicHeader-module--header2--2SeCb\";\nexport var root = \"PlasmicHeader-module--root--O1cys\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/saa_s_website/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport var endIconContainer = \"PlasmicTextInput-module--endIconContainer--EVwlX\";\nexport var endIconContainershowEndIcon = \"PlasmicTextInput-module--endIconContainershowEndIcon--A34ge\";\nexport var input = \"PlasmicTextInput-module--input--J4RAn\";\nexport var input___focusVisibleWithin = \"PlasmicTextInput-module--input___focusVisibleWithin--Ib4PX\";\nexport var inputcolor_dark = \"PlasmicTextInput-module--inputcolor_dark--KSiTU\";\nexport var inputisDisabled = \"PlasmicTextInput-module--inputisDisabled--zzx-o\";\nexport var root = \"PlasmicTextInput-module--root--3VrC-\";\nexport var root___focusVisibleWithin = \"PlasmicTextInput-module--root___focusVisibleWithin--9CJ1z\";\nexport var rootcolor_dark = \"PlasmicTextInput-module--rootcolor_dark--nZfgZ\";\nexport var slotTargetEndIconcolor_dark = \"PlasmicTextInput-module--slotTargetEndIconcolor_dark--H3aBl\";\nexport var slotTargetEndIconshowEndIcon = \"PlasmicTextInput-module--slotTargetEndIconshowEndIcon--05WCf\";\nexport var slotTargetStartIconcolor_dark = \"PlasmicTextInput-module--slotTargetStartIconcolor_dark--3Jvio\";\nexport var slotTargetStartIconshowStartIcon = \"PlasmicTextInput-module--slotTargetStartIconshowStartIcon--bLTJr\";\nexport var startIconContainer = \"PlasmicTextInput-module--startIconContainer--6rB5J\";\nexport var startIconContainer___focusVisibleWithin = \"PlasmicTextInput-module--startIconContainer___focusVisibleWithin--Ik5h1\";\nexport var startIconContainershowStartIcon = \"PlasmicTextInput-module--startIconContainershowStartIcon--siBAj\";\nexport var svg__ftctm = \"PlasmicTextInput-module--svg__ftctm--wl0Ie\";\nexport var svg__jsMtR = \"PlasmicTextInput-module--svg__jsMtR--eMa0c\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SearchsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        stroke={\"currentColor\"}\n        strokeLinecap={\"round\"}\n        strokeLinejoin={\"round\"}\n        strokeWidth={\"1.5\"}\n        d={\n          \"M19.25 19.25L15.5 15.5M4.75 11a6.25 6.25 0 1112.5 0 6.25 6.25 0 01-12.5 0z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default SearchsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: 6KC2bgm4VSse6\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicTextInput.module.css\" // plasmic-import: 6KC2bgm4VSse6/css\nimport SearchsvgIcon from \"./icons/PlasmicIcon__Searchsvg\" // plasmic-import: kMex8Oh9LRIdiJ/icon\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: c5rjMfKKxYkDM2/icon\n\nexport const PlasmicTextInput__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"color\"\n)\n\nexport const PlasmicTextInput__ArgProps = new Array(\n  \"placeholder\",\n  \"endIcon\",\n  \"startIcon\",\n  \"value\"\n)\n\nfunction PlasmicTextInput__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(\n    () =>\n      Object.assign(\n        {\n          placeholder: \"Enter something…\",\n        },\n\n        props.args\n      ),\n\n    [props.args]\n  )\n\n  const $props = args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: true,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(\n        hasVariant(variants, \"showStartIcon\", \"showStartIcon\") ? true : true\n      ) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainer___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.startIconContainercolor_dark]: hasVariant(\n              variants,\n              \"color\",\n              \"dark\"\n            ),\n\n            [sty.startIconContainerisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <SearchsvgIcon\n                className={classNames(projectcss.all, sty.svg__jsMtR)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconcolor_dark]: hasVariant(\n                variants,\n                \"color\",\n                \"dark\"\n              ),\n\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                variants,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <input\n        data-plasmic-name={\"input\"}\n        data-plasmic-override={overrides.input}\n        className={classNames(projectcss.all, projectcss.input, sty.input, {\n          [sty.input___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.inputcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.inputisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.inputshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        })}\n        disabled={\n          hasVariant(variants, \"isDisabled\", \"isDisabled\") ? true : undefined\n        }\n        placeholder={args.placeholder}\n        type={\"text\"}\n        value={args.value}\n      />\n\n      {(hasVariant(variants, \"showEndIcon\", \"showEndIcon\") ? true : true) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainercolor_dark]: hasVariant(\n              variants,\n              \"color\",\n              \"dark\"\n            ),\n\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__ftctm)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconcolor_dark]: hasVariant(\n                variants,\n                \"color\",\n                \"dark\"\n              ),\n\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                variants,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  return pp.useTextInput(\n    PlasmicTextInput,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n      input: \"input\",\n    },\n\n    ref\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"input\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  input: [\"input\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicTextInput__ArgProps,\n          internalVariantPropNames: PlasmicTextInput__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicTextInput__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTextInput\"\n  } else {\n    func.displayName = `PlasmicTextInput.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTextInput = Object.assign(\n  // Top-level PlasmicTextInput renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    input: makeNodeComponent(\"input\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicTextInput\n    internalVariantProps: PlasmicTextInput__VariantProps,\n    internalArgProps: PlasmicTextInput__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicTextInput\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicTextInput } from \"./plasmic/saa_s_website/PlasmicTextInput\"\n\nfunction TextInput_(props, ref) {\n  const { plasmicProps } = PlasmicTextInput.useBehavior(props, ref)\n  return <PlasmicTextInput {...plasmicProps} />\n}\n\nconst TextInput = React.forwardRef(TextInput_)\n\nexport default Object.assign(TextInput, {\n  __plumeType: \"text-input\",\n})\n","export default __webpack_public_path__ + \"static/stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpg-e24dd65aca08e4e3ace4ffe4a2aed058.jpeg\";"],"names":["freeBox","freeBox___focusVisibleWithin","labelContainer","labelContainer___focusVisibleWithin","root","root___focusVisibleWithin","rootisChecked","rootisDisabled","rootisIndeterminate","slotTargetChildren","slotTargetChildren___focusVisibleWithin","svg","svg___focusVisibleWithin","svgisChecked","svgisDisabled","svgisIndeterminate","props","className","style","title","restProps","xmlns","fill","viewBox","height","width","stroke","classNames","d","strokeWidth","strokeLinecap","strokeLinejoin","fillRule","clipRule","PlasmicCheckbox__VariantProps","Array","PlasmicCheckbox__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","useTrigger","isTextInput","isRootFocusVisibleWithin","triggerRootFocusVisibleWithinProps","triggers","focusVisibleWithin_root","as","hasGap","projectcss","sty","hasVariant","PlasmicIconType","SquareMinussvgIcon","SquareCheckFilledsvgIcon","SquaresvgIcon","role","p","defaultContents","value","children","PlasmicCheckbox__RenderFunc","displayName","PlasmicCheckbox","internalVariantProps","internalArgProps","useBehavior","ref","pp","isCheckedVariant","group","variant","isIndeterminateVariant","isDisabledVariant","noLabelVariant","labelSlot","Checkbox_","plasmicProps","state","Checkbox","__plumeType","PlasmicHeader__VariantProps","PlasmicHeader__ArgProps","header2","Header2","PlasmicHeader__RenderFunc","PlasmicHeader","Header_","endIconContainer","endIconContainershowEndIcon","input","input___focusVisibleWithin","inputcolor_dark","inputisDisabled","rootcolor_dark","slotTargetEndIconcolor_dark","slotTargetEndIconshowEndIcon","slotTargetStartIconcolor_dark","slotTargetStartIconshowStartIcon","startIconContainer","startIconContainer___focusVisibleWithin","startIconContainershowStartIcon","svg__ftctm","svg__jsMtR","PlasmicTextInput__VariantProps","PlasmicTextInput__ArgProps","placeholder","startIcon","disabled","undefined","type","endIcon","PlasmicTextInput__RenderFunc","PlasmicTextInput","showStartIconVariant","showEndIconVariant","startIconSlot","endIconSlot","TextInput_","TextInput"],"sourceRoot":""}
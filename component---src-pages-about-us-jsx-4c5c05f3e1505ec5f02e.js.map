{"version":3,"file":"component---src-pages-about-us-jsx-4c5c05f3e1505ec5f02e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeroSection.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeroSection.module.css","webpack://gatsby-starter-default/./src/components/HeroSection.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__ArrowRightsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/brookeCagleWhwyBmtn30Unsplashjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/about2Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/reading9255891920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicAboutUs.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicAboutUs.module.css","webpack://gatsby-starter-default/./src/pages/about-us.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/corinneKutzTMi2R5NfoUnsplashjpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: -OzwMuddIFsAXB\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: FThbuefNiac0C/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicHeroSection.module.css\" // plasmic-import: -OzwMuddIFsAXB/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: S5xRGvVGtklZAi/icon\n\nexport const PlasmicHeroSection__VariantProps = new Array()\n\nexport const PlasmicHeroSection__ArgProps = new Array()\n\nfunction PlasmicHeroSection__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"columns\"}\n        data-plasmic-override={overrides.columns}\n        className={classNames(projectcss.all, sty.columns)}\n      >\n        <div\n          data-plasmic-name={\"column\"}\n          data-plasmic-override={overrides.column}\n          className={classNames(projectcss.all, sty.column)}\n        >\n          <h2\n            data-plasmic-name={\"h2\"}\n            data-plasmic-override={overrides.h2}\n            className={classNames(\n              projectcss.all,\n              projectcss.h2,\n              projectcss.__wab_text,\n              sty.h2\n            )}\n          >\n            {\"Make your call to action here.\"}\n          </h2>\n\n          <div\n            data-plasmic-name={\"text\"}\n            data-plasmic-override={overrides.text}\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text\n            )}\n          >\n            {\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"}\n          </div>\n\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            color={\"blue\"}\n            endIcon={\n              <ArrowRightsvgIcon\n                data-plasmic-name={\"svg\"}\n                data-plasmic-override={overrides.svg}\n                className={classNames(projectcss.all, sty.svg)}\n                role={\"img\"}\n              />\n            }\n            shape={\"rounded\"}\n            showEndIcon={true}\n          >\n            {\"Start Now\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"columns\", \"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  columns: [\"columns\", \"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  column: [\"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  h2: [\"h2\"],\n  text: [\"text\"],\n  button: [\"button\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeroSection__ArgProps,\n          internalVariantPropNames: PlasmicHeroSection__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeroSection__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeroSection\"\n  } else {\n    func.displayName = `PlasmicHeroSection.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeroSection = Object.assign(\n  // Top-level PlasmicHeroSection renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    columns: makeNodeComponent(\"columns\"),\n    column: makeNodeComponent(\"column\"),\n    h2: makeNodeComponent(\"h2\"),\n    text: makeNodeComponent(\"text\"),\n    button: makeNodeComponent(\"button\"),\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicHeroSection\n    internalVariantProps: PlasmicHeroSection__VariantProps,\n    internalArgProps: PlasmicHeroSection__ArgProps,\n  }\n)\n\nexport default PlasmicHeroSection\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicHeroSection-module--button--ImHmm\";\nexport var column = \"PlasmicHeroSection-module--column--57fny\";\nexport var columns = \"PlasmicHeroSection-module--columns--upbVn\";\nexport var h2 = \"PlasmicHeroSection-module--h2--BMu3s\";\nexport var root = \"PlasmicHeroSection-module--root--c+R9R\";\nexport var svg = \"PlasmicHeroSection-module--svg--CwZ8B\";\nexport var svg__e9Qyd = \"PlasmicHeroSection-module--svg__e9Qyd--Lov1h\";\nexport var text = \"PlasmicHeroSection-module--text--h8sQ4\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeroSection } from \"./plasmic/saa_s_website/PlasmicHeroSection\"\n\nfunction HeroSection_(props, ref) {\n  // Use PlasmicHeroSection to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeroSection are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeroSectionProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeroSection root={{ ref }} {...props} />\n}\n\nconst HeroSection = React.forwardRef(HeroSection_)\n\nexport default HeroSection\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ArrowRightsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\"plasmic-default__svg\", className, \"icon\")}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M18.055 10.522V6.016L24.039 12l-5.984 5.984v-4.506H-.039v-2.957h18.094z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default ArrowRightsvgIcon\n/* prettier-ignore-end */\n","export default __webpack_public_path__ + \"static/brookeCagleWhwyBmtn30Unsplashjpg-182a6034783a82c5f92913f770cec9e8.jpeg\";","export default __webpack_public_path__ + \"static/about2Jpg-f69fabfde647425f5ad70c143458a580.jpeg\";","export default __webpack_public_path__ + \"static/reading9255891920Jpg-5e7d13e124883a748a4d4299877e8bfc.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: 1HCnOiEwOJ1SI5\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header2 from \"../../Header2\" // plasmic-import: k7o7R5KA05BDU1/component\nimport Button from \"../../Button\" // plasmic-import: FThbuefNiac0C/component\nimport HeroSection from \"../../HeroSection\" // plasmic-import: -OzwMuddIFsAXB/component\nimport Footer from \"../../Footer\" // plasmic-import: UCdzYIWgs-f8ml/component\nimport { useScreenVariants as useScreenVariantsj0Zyv8Tr7BOtZ2 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: j0Zyv8Tr7BOtZ2/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicAboutUs.module.css\" // plasmic-import: 1HCnOiEwOJ1SI5/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: S5xRGvVGtklZAi/icon\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: vnsKZ-sNQjV5Km/icon\nimport corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6 from \"./images/corinneKutzTMi2R5NfoUnsplashjpg.jpeg\" // plasmic-import: xcdVvFVkT2X8J6/picture\nimport brookeCagleWhwyBmtn30UnsplashjpgANu4WeMpMp837 from \"./images/brookeCagleWhwyBmtn30Unsplashjpg.jpeg\" // plasmic-import: aNU4We-MpMp837/picture\nimport about2JpgQEgMsQjFuWt9 from \"./images/about2Jpg.jpeg\" // plasmic-import: qEgMsQJ_FUWt-9/picture\nimport reading9255891920JpgWTkxAvSgWts9Jj from \"./images/reading9255891920Jpg.jpeg\" // plasmic-import: WTkxAvSgWTS9Jj/picture\n\nexport const PlasmicAboutUs__VariantProps = new Array()\n\nexport const PlasmicAboutUs__ArgProps = new Array()\n\nfunction PlasmicAboutUs__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsj0Zyv8Tr7BOtZ2(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <div className={classNames(projectcss.all, sty.freeBox__bnqH)}>\n            <Header2\n              data-plasmic-name={\"header2\"}\n              data-plasmic-override={overrides.header2}\n              className={classNames(\"__wab_instance\", sty.header2)}\n            />\n          </div>\n\n          <div\n            data-plasmic-name={\"pageBanner\"}\n            data-plasmic-override={overrides.pageBanner}\n            className={classNames(projectcss.all, sty.pageBanner)}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__tKr2)}>\n              <p.Stack\n                as={\"div\"}\n                data-plasmic-name={\"columns\"}\n                data-plasmic-override={overrides.columns}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns)}\n              >\n                <div className={classNames(projectcss.all, sty.column__q5Dk)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__eJfc)}\n                  >\n                    <h1\n                      data-plasmic-name={\"h1\"}\n                      data-plasmic-override={overrides.h1}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1\n                      )}\n                    >\n                      {\"About us\"}\n                    </h1>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__aB0JB\n                      )}\n                    >\n                      {\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\"\n                      }\n                    </div>\n                  </p.Stack>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__njfpI)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__iWqGu)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"100%\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    loading={\"lazy\"}\n                    src={{\n                      src: corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6,\n                      fullWidth: 1920,\n                      fullHeight: 1280,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n              </p.Stack>\n            </div>\n          </div>\n\n          <div className={classNames(projectcss.all, sty.freeBox__cUc59)}>\n            {(\n              hasVariant(globalVariants, \"screen\", \"mobileOnly\") ? true : true\n            ) ? (\n              <section\n                data-plasmic-name={\"features\"}\n                data-plasmic-override={overrides.features}\n                className={classNames(projectcss.all, sty.features)}\n              >\n                <div className={classNames(projectcss.all, sty.column__b0TXu)}>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2___8Px8\n                    )}\n                  >\n                    {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"WHY CHOOSE US\"\n                      : \"WHY CHOOSE US\"}\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__sBnkq\n                    )}\n                  >\n                    {\n                      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. \\nLorem Ipsum has been the industry's standard dummy text ever since the 1500s\"\n                    }\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow2\"}\n                      data-plasmic-override={overrides.outerRow2}\n                      className={classNames(projectcss.all, sty.outerRow2)}\n                    >\n                      <div\n                        data-plasmic-name={\"row2\"}\n                        data-plasmic-override={overrides.row2}\n                        className={classNames(projectcss.all, sty.row2)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__lBq\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__kaV\n                              )}\n                            >\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  sty.freeBox__szxQu\n                                )}\n                              />\n\n                              <h3\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h3,\n                                  projectcss.__wab_text,\n                                  sty.h3__txv04\n                                )}\n                              >\n                                {hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"Some value proposition of your service.\"\n                                  : \"Some value proposition of your service.\"}\n                              </h3>\n\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.__wab_text,\n                                  sty.text__dbU1\n                                )}\n                              >\n                                {hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n                                  : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\n                              </div>\n\n                              <Button\n                                className={classNames(\n                                  \"__wab_instance\",\n                                  sty.button__oqMaY\n                                )}\n                                color={\"blue\"}\n                                endIcon={\n                                  <ArrowRightsvgIcon\n                                    className={classNames(\n                                      projectcss.all,\n                                      sty.svg___3F393\n                                    )}\n                                    role={\"img\"}\n                                  />\n                                }\n                                shape={\"rounded\"}\n                                showEndIcon={true}\n                              >\n                                {\"Learn more\"}\n                              </Button>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__uItjf\n                          )}\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__klY2R)}\n                            displayHeight={\"400px\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"none\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"400px\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: brookeCagleWhwyBmtn30UnsplashjpgANu4WeMpMp837,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container5\"}\n                    data-plasmic-override={overrides.container5}\n                    className={classNames(projectcss.all, sty.container5)}\n                  >\n                    {true ? (\n                      <div\n                        data-plasmic-name={\"outerRow3\"}\n                        data-plasmic-override={overrides.outerRow3}\n                        className={classNames(projectcss.all, sty.outerRow3)}\n                      >\n                        <div\n                          data-plasmic-name={\"row4\"}\n                          data-plasmic-override={overrides.row4}\n                          className={classNames(projectcss.all, sty.row4)}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.column__pJi8W\n                            )}\n                          >\n                            <p.PlasmicImg\n                              alt={\"\"}\n                              className={classNames(sty.img__tq6DD)}\n                              displayHeight={\"auto\"}\n                              displayMaxHeight={\"none\"}\n                              displayMaxWidth={\n                                hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"100%\"\n                                  : \"100%\"\n                              }\n                              displayMinHeight={\"0\"}\n                              displayMinWidth={\"0\"}\n                              displayWidth={\"auto\"}\n                              loading={\n                                hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"lazy\"\n                                  : \"lazy\"\n                              }\n                              src={\n                                hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? {\n                                      src: about2JpgQEgMsQjFuWt9,\n                                      fullWidth: 570,\n                                      fullHeight: 650,\n                                      aspectRatio: undefined,\n                                    }\n                                  : {\n                                      src: about2JpgQEgMsQjFuWt9,\n                                      fullWidth: 570,\n                                      fullHeight: 650,\n                                      aspectRatio: undefined,\n                                    }\n                              }\n                            />\n                          </div>\n\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.column___6UExt\n                            )}\n                          >\n                            <h2\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h2,\n                                projectcss.__wab_text,\n                                sty.h2__knTl\n                              )}\n                            >\n                              {hasVariant(\n                                globalVariants,\n                                \"screen\",\n                                \"mobileOnly\"\n                              )\n                                ? \"We Execute Our Ideas \\nThe Start To Finish.\"\n                                : \"We Execute Our Ideas \\nThe Start To Finish.\"}\n                            </h2>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__tvKn\n                              )}\n                            >\n                              {\n                                \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n                              }\n                            </div>\n\n                            <p.Stack\n                              as={p.PlasmicLink}\n                              data-plasmic-name={\"link\"}\n                              data-plasmic-override={overrides.link}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.a,\n                                sty.link\n                              )}\n                              component={Link}\n                              platform={\"gatsby\"}\n                            >\n                              {false ? (\n                                <IconIcon\n                                  className={classNames(\n                                    projectcss.all,\n                                    sty.svg__aakHm\n                                  )}\n                                  role={\"img\"}\n                                />\n                              ) : null}\n\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.__wab_text,\n                                  sty.text___03Ytm\n                                )}\n                              >\n                                {\"LEARN More\"}\n                              </div>\n\n                              {false ? (\n                                <IconIcon\n                                  className={classNames(\n                                    projectcss.all,\n                                    sty.svg__ftCpc\n                                  )}\n                                  role={\"img\"}\n                                />\n                              ) : null}\n                            </p.Stack>\n                          </div>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"container6\"}\n                    data-plasmic-override={overrides.container6}\n                    className={classNames(projectcss.all, sty.container6)}\n                  >\n                    <div\n                      data-plasmic-name={\"outerRow4\"}\n                      data-plasmic-override={overrides.outerRow4}\n                      className={classNames(projectcss.all, sty.outerRow4)}\n                    >\n                      <div\n                        data-plasmic-name={\"row3\"}\n                        data-plasmic-override={overrides.row3}\n                        className={classNames(projectcss.all, sty.row3)}\n                      >\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column__kgP1T\n                          )}\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__vexE)}\n                            displayHeight={\"400px\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"none\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"400px\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: reading9255891920JpgWTkxAvSgWts9Jj,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </div>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.column___5SRu\n                          )}\n                        >\n                          {true ? (\n                            <p.Stack\n                              as={\"div\"}\n                              hasGap={true}\n                              className={classNames(\n                                projectcss.all,\n                                sty.freeBox__rn547\n                              )}\n                            >\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  sty.freeBox__a13ED\n                                )}\n                              />\n\n                              <h3\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h3,\n                                  projectcss.__wab_text,\n                                  sty.h3__e1SeP\n                                )}\n                              >\n                                {hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"Some value proposition of your service.\"\n                                  : \"Some value proposition of your service.\"}\n                              </h3>\n\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.__wab_text,\n                                  sty.text__ocOaC\n                                )}\n                              >\n                                {hasVariant(\n                                  globalVariants,\n                                  \"screen\",\n                                  \"mobileOnly\"\n                                )\n                                  ? \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n                                  : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\n                              </div>\n\n                              <Button\n                                className={classNames(\n                                  \"__wab_instance\",\n                                  sty.button___8Gi1K\n                                )}\n                                color={\"blue\"}\n                                endIcon={\n                                  <ArrowRightsvgIcon\n                                    className={classNames(\n                                      projectcss.all,\n                                      sty.svg__bkkVm\n                                    )}\n                                    role={\"img\"}\n                                  />\n                                }\n                                shape={\"rounded\"}\n                                showEndIcon={true}\n                              >\n                                {\"Learn more\"}\n                              </Button>\n                            </p.Stack>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            ) : null}\n\n            <HeroSection\n              data-plasmic-name={\"heroSection\"}\n              data-plasmic-override={overrides.heroSection}\n              className={classNames(\"__wab_instance\", sty.heroSection)}\n            />\n          </div>\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header2\",\n    \"pageBanner\",\n    \"columns\",\n    \"h1\",\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n    \"link\",\n    \"container6\",\n    \"outerRow4\",\n    \"row3\",\n    \"heroSection\",\n    \"footer\",\n  ],\n\n  header2: [\"header2\"],\n  pageBanner: [\"pageBanner\", \"columns\", \"h1\"],\n  columns: [\"columns\", \"h1\"],\n  h1: [\"h1\"],\n  features: [\n    \"features\",\n    \"container4\",\n    \"outerRow2\",\n    \"row2\",\n    \"container5\",\n    \"outerRow3\",\n    \"row4\",\n    \"link\",\n    \"container6\",\n    \"outerRow4\",\n    \"row3\",\n  ],\n\n  container4: [\"container4\", \"outerRow2\", \"row2\"],\n  outerRow2: [\"outerRow2\", \"row2\"],\n  row2: [\"row2\"],\n  container5: [\"container5\", \"outerRow3\", \"row4\", \"link\"],\n  outerRow3: [\"outerRow3\", \"row4\", \"link\"],\n  row4: [\"row4\", \"link\"],\n  link: [\"link\"],\n  container6: [\"container6\", \"outerRow4\", \"row3\"],\n  outerRow4: [\"outerRow4\", \"row3\"],\n  row3: [\"row3\"],\n  heroSection: [\"heroSection\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicAboutUs__ArgProps,\n          internalVariantPropNames: PlasmicAboutUs__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicAboutUs__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicAboutUs\"\n  } else {\n    func.displayName = `PlasmicAboutUs.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicAboutUs = Object.assign(\n  // Top-level PlasmicAboutUs renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header2: makeNodeComponent(\"header2\"),\n    pageBanner: makeNodeComponent(\"pageBanner\"),\n    columns: makeNodeComponent(\"columns\"),\n    h1: makeNodeComponent(\"h1\"),\n    features: makeNodeComponent(\"features\"),\n    container4: makeNodeComponent(\"container4\"),\n    outerRow2: makeNodeComponent(\"outerRow2\"),\n    row2: makeNodeComponent(\"row2\"),\n    container5: makeNodeComponent(\"container5\"),\n    outerRow3: makeNodeComponent(\"outerRow3\"),\n    row4: makeNodeComponent(\"row4\"),\n    link: makeNodeComponent(\"link\"),\n    container6: makeNodeComponent(\"container6\"),\n    outerRow4: makeNodeComponent(\"outerRow4\"),\n    row3: makeNodeComponent(\"row3\"),\n    heroSection: makeNodeComponent(\"heroSection\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicAboutUs\n    internalVariantProps: PlasmicAboutUs__VariantProps,\n    internalArgProps: PlasmicAboutUs__ArgProps,\n  }\n)\n\nexport default PlasmicAboutUs\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicAboutUs-module--__wab_img-spacer--c08Sx\";\nexport var button___8Gi1K = \"PlasmicAboutUs-module--button___8Gi1K--NStuB\";\nexport var button__oqMaY = \"PlasmicAboutUs-module--button__oqMaY--VSkMw\";\nexport var column___5SRu = \"PlasmicAboutUs-module--column___5SRu--SpaEh\";\nexport var column___6UExt = \"PlasmicAboutUs-module--column___6UExt--ZLzKl\";\nexport var column__b0TXu = \"PlasmicAboutUs-module--column__b0TXu--44qOH\";\nexport var column__kgP1T = \"PlasmicAboutUs-module--column__kgP1T--RCHsb\";\nexport var column__lBq = \"PlasmicAboutUs-module--column__lBq--8C6m+\";\nexport var column__njfpI = \"PlasmicAboutUs-module--column__njfpI--G85Fl\";\nexport var column__pJi8W = \"PlasmicAboutUs-module--column__pJi8W--u-pWV\";\nexport var column__q5Dk = \"PlasmicAboutUs-module--column__q5Dk--KuXc6\";\nexport var column__uItjf = \"PlasmicAboutUs-module--column__uItjf--SHGeB\";\nexport var columns = \"PlasmicAboutUs-module--columns--tq1t1\";\nexport var container4 = \"PlasmicAboutUs-module--container4--b+o4S\";\nexport var container5 = \"PlasmicAboutUs-module--container5--mxZN7\";\nexport var container6 = \"PlasmicAboutUs-module--container6--UePSK\";\nexport var features = \"PlasmicAboutUs-module--features--1Qqp-\";\nexport var footer = \"PlasmicAboutUs-module--footer--89zUJ\";\nexport var freeBox__a13ED = \"PlasmicAboutUs-module--freeBox__a13ED--E5Usy\";\nexport var freeBox__bnqH = \"PlasmicAboutUs-module--freeBox__bnqH--PTG7-\";\nexport var freeBox__cUc59 = \"PlasmicAboutUs-module--freeBox__cUc59---7hMh\";\nexport var freeBox__eJfc = \"PlasmicAboutUs-module--freeBox__eJfc--8imKb\";\nexport var freeBox__kaV = \"PlasmicAboutUs-module--freeBox__kaV--jWd8s\";\nexport var freeBox__rn547 = \"PlasmicAboutUs-module--freeBox__rn547--W-Uf+\";\nexport var freeBox__szxQu = \"PlasmicAboutUs-module--freeBox__szxQu--qiXC2\";\nexport var freeBox__tKr2 = \"PlasmicAboutUs-module--freeBox__tKr2--MsROQ\";\nexport var h1 = \"PlasmicAboutUs-module--h1--HfHjg\";\nexport var h2___8Px8 = \"PlasmicAboutUs-module--h2___8Px8--b+2QR\";\nexport var h2__knTl = \"PlasmicAboutUs-module--h2__knTl--JdLbf\";\nexport var h3__e1SeP = \"PlasmicAboutUs-module--h3__e1SeP--CqWSc\";\nexport var h3__txv04 = \"PlasmicAboutUs-module--h3__txv04--RJvKe\";\nexport var header2 = \"PlasmicAboutUs-module--header2--+Eqfx\";\nexport var heroSection = \"PlasmicAboutUs-module--heroSection--qo6j+\";\nexport var img__iWqGu = \"PlasmicAboutUs-module--img__iWqGu--HY+OP\";\nexport var img__klY2R = \"PlasmicAboutUs-module--img__klY2R--kfVNC\";\nexport var img__tq6DD = \"PlasmicAboutUs-module--img__tq6DD--bz1kS\";\nexport var img__vexE = \"PlasmicAboutUs-module--img__vexE--9Q8-b\";\nexport var link = \"PlasmicAboutUs-module--link--O4vOq\";\nexport var outerRow2 = \"PlasmicAboutUs-module--outerRow2--cpD83\";\nexport var outerRow3 = \"PlasmicAboutUs-module--outerRow3--6Gdyt\";\nexport var outerRow4 = \"PlasmicAboutUs-module--outerRow4--wK1wF\";\nexport var pageBanner = \"PlasmicAboutUs-module--pageBanner--BnMXo\";\nexport var root = \"PlasmicAboutUs-module--root--LczMR\";\nexport var row2 = \"PlasmicAboutUs-module--row2--j1vD6\";\nexport var row3 = \"PlasmicAboutUs-module--row3--htbJH\";\nexport var row4 = \"PlasmicAboutUs-module--row4--H-zPB\";\nexport var svg___3F393 = \"PlasmicAboutUs-module--svg___3F393--32now\";\nexport var svg__aakHm = \"PlasmicAboutUs-module--svg__aakHm--ihitn\";\nexport var svg__au7Ds = \"PlasmicAboutUs-module--svg__au7Ds--qHaV7\";\nexport var svg__bkkVm = \"PlasmicAboutUs-module--svg__bkkVm--4orS0\";\nexport var svg__ftCpc = \"PlasmicAboutUs-module--svg__ftCpc--tYojp\";\nexport var svg__n3WHo = \"PlasmicAboutUs-module--svg__n3WHo--8Og5L\";\nexport var text___03Ytm = \"PlasmicAboutUs-module--text___03Ytm--9YYoz\";\nexport var text__aB0JB = \"PlasmicAboutUs-module--text__aB0JB--pUzad\";\nexport var text__dbU1 = \"PlasmicAboutUs-module--text__dbU1--JqCsQ\";\nexport var text__ocOaC = \"PlasmicAboutUs-module--text__ocOaC--6m-9K\";\nexport var text__sBnkq = \"PlasmicAboutUs-module--text__sBnkq--v-FBz\";\nexport var text__tvKn = \"PlasmicAboutUs-module--text__tvKn--HxR7W\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicAboutUs } from \"../components/plasmic/saa_s_website/PlasmicAboutUs\"\n\nfunction AboutUs() {\n  // Use PlasmicAboutUs to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicAboutUs are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicAboutUs is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicAboutUs />\n}\n\nexport default AboutUs\n","export default __webpack_public_path__ + \"static/corinneKutzTMi2R5NfoUnsplashjpg-449c04251b8d2fc379b496513143fb3b.jpeg\";"],"names":["PlasmicHeroSection__VariantProps","Array","PlasmicHeroSection__ArgProps","PlasmicDescendants","root","columns","column","h2","text","button","svg","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","ph","Object","assign","args","className","classNames","projectcss","Button","color","endIcon","role","shape","showEndIcon","PlasmicHeroSection__RenderFunc","displayName","PlasmicHeroSection","internalVariantProps","internalArgProps","HeroSection_","ref","style","title","restProps","xmlns","viewBox","height","width","fill","d","PlasmicAboutUs__VariantProps","PlasmicAboutUs__ArgProps","header2","pageBanner","h1","features","container4","outerRow2","row2","container5","outerRow3","row4","link","container6","outerRow4","row3","heroSection","footer","globalVariants","ensureGlobalVariants","screen","useScreenVariantsj0Zyv8Tr7BOtZ2","as","hasGap","Header2","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6","fullWidth","fullHeight","aspectRatio","undefined","hasVariant","brookeCagleWhwyBmtn30UnsplashjpgANu4WeMpMp837","about2JpgQEgMsQjFuWt9","p","component","Link","platform","reading9255891920JpgWTkxAvSgWts9Jj","HeroSection","Footer","PlasmicAboutUs__RenderFunc","PlasmicAboutUs"],"sourceRoot":""}
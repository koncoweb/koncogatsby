{"version":3,"file":"component---src-pages-signup-jsx-c5e8bb5c0bbabcca7bd5.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicSignUp.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicSignUp.module.css","webpack://gatsby-starter-default/./src/pages/signup.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/greenChameleonS9Cc2SKySjmUnsplashjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/tiffanyTertipesNxcs8Wwj9J0Unsplashjpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: pYgavYs7vQSJ7j\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: GiBoz5mPYbhbH5/component\nimport TextInput from \"../../TextInput\" // plasmic-import: 6KC2bgm4VSse6/component\nimport Checkbox from \"../../Checkbox\" // plasmic-import: L2k-RkkWzfKy4S/component\nimport Footer from \"../../Footer\" // plasmic-import: UCdzYIWgs-f8ml/component\nimport { useScreenVariants as useScreenVariantsj0Zyv8Tr7BOtZ2 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: j0Zyv8Tr7BOtZ2/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicSignUp.module.css\" // plasmic-import: pYgavYs7vQSJ7j/css\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: vnsKZ-sNQjV5Km/icon\nimport tiffanyTertipesNxcs8Wwj9J0Unsplashjpg7YXw56Ww6R9OSh from \"./images/tiffanyTertipesNxcs8Wwj9J0Unsplashjpg.jpeg\" // plasmic-import: 7YXw56Ww6R9oSh/picture\nimport stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpgUS3MIzugi8OsL7 from \"./images/stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpg.jpeg\" // plasmic-import: uS3mIZUGI8OsL7/picture\nimport greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo from \"./images/greenChameleonS9Cc2SKySjmUnsplashjpg.jpeg\" // plasmic-import: -MuyYbjUpLS1Eo/picture\n\nexport const PlasmicSignUp__VariantProps = new Array()\n\nexport const PlasmicSignUp__ArgProps = new Array()\n\nfunction PlasmicSignUp__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsj0Zyv8Tr7BOtZ2(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"mainSection\"}\n            data-plasmic-override={overrides.mainSection}\n            className={classNames(projectcss.all, sty.mainSection)}\n          >\n            <div\n              data-plasmic-name={\"pageBanner\"}\n              data-plasmic-override={overrides.pageBanner}\n              className={classNames(projectcss.all, sty.pageBanner)}\n            >\n              <div className={classNames(projectcss.all, sty.freeBox___2Zpq5)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.columns__rAdNe)}\n                >\n                  <div\n                    className={classNames(projectcss.all, sty.column__ec67J)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__fXTdE)}\n                    >\n                      <h1\n                        data-plasmic-name={\"h1\"}\n                        data-plasmic-override={overrides.h1}\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h1,\n                          projectcss.__wab_text,\n                          sty.h1\n                        )}\n                      >\n                        {\"Sign Up\"}\n                      </h1>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__j71Zd\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\"\n                        }\n                      </div>\n                    </p.Stack>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.column__l7OeX)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img___3LpxS)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"100%\"\n                          : \"100%\"\n                      }\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"lazy\"\n                          : \"lazy\"\n                      }\n                      src={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? {\n                              src: stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpgUS3MIzugi8OsL7,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }\n                          : {\n                              src: tiffanyTertipesNxcs8Wwj9J0Unsplashjpg7YXw56Ww6R9OSh,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }\n                      }\n                    />\n                  </div>\n                </p.Stack>\n              </div>\n            </div>\n\n            <div\n              data-plasmic-name={\"mainSection2\"}\n              data-plasmic-override={overrides.mainSection2}\n              className={classNames(projectcss.all, sty.mainSection2)}\n            >\n              <div className={classNames(projectcss.all, sty.columns__nXRi)}>\n                <div className={classNames(projectcss.all, sty.column__bqep0)}>\n                  <div\n                    data-plasmic-name={\"container4\"}\n                    data-plasmic-override={overrides.container4}\n                    className={classNames(projectcss.all, sty.container4)}\n                  >\n                    <h2\n                      data-plasmic-name={\"h2\"}\n                      data-plasmic-override={overrides.h2}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2\n                      )}\n                    >\n                      {\"Register\"}\n                    </h2>\n\n                    <label\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.label__sjIpY\n                      )}\n                    >\n                      {\"Name\"}\n                    </label>\n\n                    <TextInput\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.textInput__ddOL\n                      )}\n                      placeholder={\" \"}\n                    />\n\n                    <label\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.label___80Np0\n                      )}\n                    >\n                      {\"Email\"}\n                    </label>\n\n                    <TextInput\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.textInput__vz4DA\n                      )}\n                      placeholder={\" \"}\n                    />\n\n                    <label\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.label__o40Q1\n                      )}\n                    >\n                      {\"Phone\"}\n                    </label>\n\n                    <TextInput\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.textInput__jJf4\n                      )}\n                      placeholder={\" \"}\n                    />\n\n                    <Checkbox\n                      data-plasmic-name={\"checkbox\"}\n                      data-plasmic-override={overrides.checkbox}\n                      className={classNames(\"__wab_instance\", sty.checkbox)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__qqW3\n                        )}\n                      >\n                        {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"I understand that this form is \\nstoring my submitted information \\nso I can be contacted.\"\n                          : \"I understand that this form is storing\"}\n                      </div>\n                    </Checkbox>\n\n                    <p.Stack\n                      as={p.PlasmicLink}\n                      data-plasmic-name={\"link\"}\n                      data-plasmic-override={overrides.link}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.a,\n                        sty.link\n                      )}\n                      component={Link}\n                      platform={\"gatsby\"}\n                    >\n                      {false ? (\n                        <IconIcon\n                          className={classNames(projectcss.all, sty.svg__cTzdL)}\n                          role={\"img\"}\n                        />\n                      ) : null}\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text___5GCeY\n                        )}\n                      >\n                        {\"Send Now\"}\n                      </div>\n\n                      {false ? (\n                        <IconIcon\n                          className={classNames(projectcss.all, sty.svg__o44Cq)}\n                          role={\"img\"}\n                        />\n                      ) : null}\n                    </p.Stack>\n                  </div>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__vs6Nc)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__mdvQe)}\n                    displayHeight={\"100%\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"100%\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    loading={\"lazy\"}\n                    src={{\n                      src: greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo,\n                      fullWidth: 1920,\n                      fullHeight: 1280,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"mainSection\",\n    \"pageBanner\",\n    \"h1\",\n    \"mainSection2\",\n    \"container4\",\n    \"h2\",\n    \"checkbox\",\n    \"link\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  mainSection: [\n    \"mainSection\",\n    \"pageBanner\",\n    \"h1\",\n    \"mainSection2\",\n    \"container4\",\n    \"h2\",\n    \"checkbox\",\n    \"link\",\n  ],\n\n  pageBanner: [\"pageBanner\", \"h1\"],\n  h1: [\"h1\"],\n  mainSection2: [\"mainSection2\", \"container4\", \"h2\", \"checkbox\", \"link\"],\n  container4: [\"container4\", \"h2\", \"checkbox\", \"link\"],\n  h2: [\"h2\"],\n  checkbox: [\"checkbox\"],\n  link: [\"link\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicSignUp__ArgProps,\n          internalVariantPropNames: PlasmicSignUp__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicSignUp__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicSignUp\"\n  } else {\n    func.displayName = `PlasmicSignUp.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicSignUp = Object.assign(\n  // Top-level PlasmicSignUp renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    mainSection: makeNodeComponent(\"mainSection\"),\n    pageBanner: makeNodeComponent(\"pageBanner\"),\n    h1: makeNodeComponent(\"h1\"),\n    mainSection2: makeNodeComponent(\"mainSection2\"),\n    container4: makeNodeComponent(\"container4\"),\n    h2: makeNodeComponent(\"h2\"),\n    checkbox: makeNodeComponent(\"checkbox\"),\n    link: makeNodeComponent(\"link\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicSignUp\n    internalVariantProps: PlasmicSignUp__VariantProps,\n    internalArgProps: PlasmicSignUp__ArgProps,\n  }\n)\n\nexport default PlasmicSignUp\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicSignUp-module--__wab_img-spacer--VFo0v\";\nexport var checkbox = \"PlasmicSignUp-module--checkbox--2ZtAM\";\nexport var column__bqep0 = \"PlasmicSignUp-module--column__bqep0--hphRO\";\nexport var column__ec67J = \"PlasmicSignUp-module--column__ec67J--cVsMj\";\nexport var column__l7OeX = \"PlasmicSignUp-module--column__l7OeX--F9mwz\";\nexport var column__vs6Nc = \"PlasmicSignUp-module--column__vs6Nc--n3DkN\";\nexport var columns__nXRi = \"PlasmicSignUp-module--columns__nXRi--BRCu1\";\nexport var columns__rAdNe = \"PlasmicSignUp-module--columns__rAdNe--gDc3P\";\nexport var container4 = \"PlasmicSignUp-module--container4--Dt9Ax\";\nexport var footer = \"PlasmicSignUp-module--footer--Tzy-H\";\nexport var freeBox___2Zpq5 = \"PlasmicSignUp-module--freeBox___2Zpq5--eHDQV\";\nexport var freeBox__fXTdE = \"PlasmicSignUp-module--freeBox__fXTdE--wAaI0\";\nexport var h1 = \"PlasmicSignUp-module--h1--z3dWC\";\nexport var h2 = \"PlasmicSignUp-module--h2--aAsA3\";\nexport var header = \"PlasmicSignUp-module--header--CC8RU\";\nexport var img___3LpxS = \"PlasmicSignUp-module--img___3LpxS--nuH6z\";\nexport var img__mdvQe = \"PlasmicSignUp-module--img__mdvQe--aaVk5\";\nexport var label___80Np0 = \"PlasmicSignUp-module--label___80Np0--CX-g7\";\nexport var label__o40Q1 = \"PlasmicSignUp-module--label__o40Q1--Pynj7\";\nexport var label__sjIpY = \"PlasmicSignUp-module--label__sjIpY--ddbhP\";\nexport var link = \"PlasmicSignUp-module--link--2VGq4\";\nexport var mainSection = \"PlasmicSignUp-module--mainSection--lkHMI\";\nexport var mainSection2 = \"PlasmicSignUp-module--mainSection2--OYsv5\";\nexport var pageBanner = \"PlasmicSignUp-module--pageBanner--Pe+fA\";\nexport var root = \"PlasmicSignUp-module--root--r2mj0\";\nexport var svg___5K9Pb = \"PlasmicSignUp-module--svg___5K9Pb--alrnY\";\nexport var svg__arUrx = \"PlasmicSignUp-module--svg__arUrx--DT-FY\";\nexport var svg__cTzdL = \"PlasmicSignUp-module--svg__cTzdL--hipEe\";\nexport var svg__dQp0X = \"PlasmicSignUp-module--svg__dQp0X--89IqS\";\nexport var svg__el8MD = \"PlasmicSignUp-module--svg__el8MD--DTz5o\";\nexport var svg__khHjw = \"PlasmicSignUp-module--svg__khHjw--VlQGg\";\nexport var svg__o44Cq = \"PlasmicSignUp-module--svg__o44Cq--ffwe3\";\nexport var svg__zOvjV = \"PlasmicSignUp-module--svg__zOvjV--cKLSE\";\nexport var textInput__ddOL = \"PlasmicSignUp-module--textInput__ddOL--H5hSy\";\nexport var textInput__jJf4 = \"PlasmicSignUp-module--textInput__jJf4--lttoW\";\nexport var textInput__vz4DA = \"PlasmicSignUp-module--textInput__vz4DA--KX6L1\";\nexport var text___5GCeY = \"PlasmicSignUp-module--text___5GCeY--zX3sh\";\nexport var text__j71Zd = \"PlasmicSignUp-module--text__j71Zd--tBEJU\";\nexport var text__qqW3 = \"PlasmicSignUp-module--text__qqW3--RMcxe\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicSignUp } from \"../components/plasmic/saa_s_website/PlasmicSignUp\"\n\nfunction SignUp() {\n  // Use PlasmicSignUp to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicSignUp are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicSignUp is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicSignUp />\n}\n\nexport default SignUp\n","export default __webpack_public_path__ + \"static/greenChameleonS9Cc2SKySjmUnsplashjpg-a3c9cb49e26ed1102271968022eeb7b0.jpeg\";","export default __webpack_public_path__ + \"static/tiffanyTertipesNxcs8Wwj9J0Unsplashjpg-a1d493c3f9e9057138a0ff67c638a598.jpeg\";"],"names":["PlasmicSignUp__VariantProps","Array","PlasmicSignUp__ArgProps","PlasmicDescendants","root","header","mainSection","pageBanner","h1","mainSection2","container4","h2","checkbox","link","footer","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","globalVariants","ph","Object","assign","args","ensureGlobalVariants","screen","useScreenVariantsj0Zyv8Tr7BOtZ2","className","projectcss","as","hasGap","classNames","Header","alt","displayHeight","displayMaxHeight","displayMaxWidth","hasVariant","displayMinHeight","displayMinWidth","displayWidth","loading","src","stephenPhillipsHostreviewsCoUk3Mhgvrk4TjMUnsplashjpgUS3MIzugi8OsL7","fullWidth","fullHeight","aspectRatio","undefined","tiffanyTertipesNxcs8Wwj9J0Unsplashjpg7YXw56Ww6R9OSh","TextInput","placeholder","Checkbox","p","component","Link","platform","greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo","Footer","PlasmicSignUp__RenderFunc","displayName","PlasmicSignUp","internalVariantProps","internalArgProps"],"sourceRoot":""}
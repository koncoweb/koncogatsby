{"version":3,"file":"component---src-pages-features-jsx-4855a0e1b82137ea7d2d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeroSection.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeroSection.module.css","webpack://gatsby-starter-default/./src/components/HeroSection.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__ArrowRightsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicFeatures.module.css","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/icons/PlasmicIcon__Icon16.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/williamHook9E9Pd9BlAtoUnsplashjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/_3Thumbjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicFeatures.jsx","webpack://gatsby-starter-default/./src/pages/features.jsx"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: GiBoz5mPYbhbH5\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Header2 from \"../../Header2\" // plasmic-import: k7o7R5KA05BDU1/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: GiBoz5mPYbhbH5/css\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        <Header2\n          data-plasmic-name={\"header2\"}\n          data-plasmic-override={overrides.header2}\n          className={classNames(\"__wab_instance\", sty.header2)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\", \"header2\"],\n  freeBox: [\"freeBox\", \"header2\"],\n  header2: [\"header2\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeader__ArgProps,\n          internalVariantPropNames: PlasmicHeader__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    header2: makeNodeComponent(\"header2\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox = \"PlasmicHeader-module--freeBox--JX88q\";\nexport var header2 = \"PlasmicHeader-module--header2--2SeCb\";\nexport var root = \"PlasmicHeader-module--root--O1cys\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/saa_s_website/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: -OzwMuddIFsAXB\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: FThbuefNiac0C/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicHeroSection.module.css\" // plasmic-import: -OzwMuddIFsAXB/css\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: S5xRGvVGtklZAi/icon\n\nexport const PlasmicHeroSection__VariantProps = new Array()\n\nexport const PlasmicHeroSection__ArgProps = new Array()\n\nfunction PlasmicHeroSection__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"columns\"}\n        data-plasmic-override={overrides.columns}\n        className={classNames(projectcss.all, sty.columns)}\n      >\n        <div\n          data-plasmic-name={\"column\"}\n          data-plasmic-override={overrides.column}\n          className={classNames(projectcss.all, sty.column)}\n        >\n          <h2\n            data-plasmic-name={\"h2\"}\n            data-plasmic-override={overrides.h2}\n            className={classNames(\n              projectcss.all,\n              projectcss.h2,\n              projectcss.__wab_text,\n              sty.h2\n            )}\n          >\n            {\"Make your call to action here.\"}\n          </h2>\n\n          <div\n            data-plasmic-name={\"text\"}\n            data-plasmic-override={overrides.text}\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text\n            )}\n          >\n            {\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"}\n          </div>\n\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            color={\"blue\"}\n            endIcon={\n              <ArrowRightsvgIcon\n                data-plasmic-name={\"svg\"}\n                data-plasmic-override={overrides.svg}\n                className={classNames(projectcss.all, sty.svg)}\n                role={\"img\"}\n              />\n            }\n            shape={\"rounded\"}\n            showEndIcon={true}\n          >\n            {\"Start Now\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"columns\", \"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  columns: [\"columns\", \"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  column: [\"column\", \"h2\", \"text\", \"button\", \"svg\"],\n  h2: [\"h2\"],\n  text: [\"text\"],\n  button: [\"button\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeroSection__ArgProps,\n          internalVariantPropNames: PlasmicHeroSection__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeroSection__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeroSection\"\n  } else {\n    func.displayName = `PlasmicHeroSection.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeroSection = Object.assign(\n  // Top-level PlasmicHeroSection renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    columns: makeNodeComponent(\"columns\"),\n    column: makeNodeComponent(\"column\"),\n    h2: makeNodeComponent(\"h2\"),\n    text: makeNodeComponent(\"text\"),\n    button: makeNodeComponent(\"button\"),\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicHeroSection\n    internalVariantProps: PlasmicHeroSection__VariantProps,\n    internalArgProps: PlasmicHeroSection__ArgProps,\n  }\n)\n\nexport default PlasmicHeroSection\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicHeroSection-module--button--ImHmm\";\nexport var column = \"PlasmicHeroSection-module--column--57fny\";\nexport var columns = \"PlasmicHeroSection-module--columns--upbVn\";\nexport var h2 = \"PlasmicHeroSection-module--h2--BMu3s\";\nexport var root = \"PlasmicHeroSection-module--root--c+R9R\";\nexport var svg = \"PlasmicHeroSection-module--svg--CwZ8B\";\nexport var svg__e9Qyd = \"PlasmicHeroSection-module--svg__e9Qyd--Lov1h\";\nexport var text = \"PlasmicHeroSection-module--text--h8sQ4\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeroSection } from \"./plasmic/saa_s_website/PlasmicHeroSection\"\n\nfunction HeroSection_(props, ref) {\n  // Use PlasmicHeroSection to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeroSection are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeroSectionProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeroSection root={{ ref }} {...props} />\n}\n\nconst HeroSection = React.forwardRef(HeroSection_)\n\nexport default HeroSection\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ArrowRightsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\"plasmic-default__svg\", className, \"icon\")}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M18.055 10.522V6.016L24.039 12l-5.984 5.984v-4.506H-.039v-2.957h18.094z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default ArrowRightsvgIcon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicFeatures-module--__wab_img-spacer--UQMlL\";\nexport var art = \"PlasmicFeatures-module--art--1eGZk\";\nexport var button = \"PlasmicFeatures-module--button--x48qA\";\nexport var column___9Dwnq = \"PlasmicFeatures-module--column___9Dwnq--Jh7Or\";\nexport var column__lngKl = \"PlasmicFeatures-module--column__lngKl--BGA3P\";\nexport var columns = \"PlasmicFeatures-module--columns--atTae\";\nexport var copy = \"PlasmicFeatures-module--copy--PNDcM\";\nexport var footer = \"PlasmicFeatures-module--footer--QyX5A\";\nexport var foreground = \"PlasmicFeatures-module--foreground--MIfMH\";\nexport var freeBox___5S1R = \"PlasmicFeatures-module--freeBox___5S1R--FUDw6\";\nexport var freeBox___8MNwI = \"PlasmicFeatures-module--freeBox___8MNwI--SQMZG\";\nexport var freeBox__ai4Qm = \"PlasmicFeatures-module--freeBox__ai4Qm--hfgVj\";\nexport var freeBox__cvzAg = \"PlasmicFeatures-module--freeBox__cvzAg--F1rF4\";\nexport var freeBox__f89Fs = \"PlasmicFeatures-module--freeBox__f89Fs--TI6Sn\";\nexport var freeBox__jRme = \"PlasmicFeatures-module--freeBox__jRme--KiL4J\";\nexport var freeBox__kCr2W = \"PlasmicFeatures-module--freeBox__kCr2W--M-hfB\";\nexport var freeBox__kSbp = \"PlasmicFeatures-module--freeBox__kSbp--Wy4ow\";\nexport var freeBox__lo0Os = \"PlasmicFeatures-module--freeBox__lo0Os--gonm3\";\nexport var freeBox__n2J7X = \"PlasmicFeatures-module--freeBox__n2J7X--+NAVK\";\nexport var freeBox__oiQ03 = \"PlasmicFeatures-module--freeBox__oiQ03--ataIF\";\nexport var freeBox__oyMq6 = \"PlasmicFeatures-module--freeBox__oyMq6--Xv2Bz\";\nexport var freeBox__q5IMa = \"PlasmicFeatures-module--freeBox__q5IMa--Knwoq\";\nexport var freeBox__xdlYy = \"PlasmicFeatures-module--freeBox__xdlYy--h5Wbz\";\nexport var freeBox__y6DTb = \"PlasmicFeatures-module--freeBox__y6DTb--poj93\";\nexport var freeBox__yjh7 = \"PlasmicFeatures-module--freeBox__yjh7--+iu0i\";\nexport var freeBox__yogKr = \"PlasmicFeatures-module--freeBox__yogKr---uP2i\";\nexport var freeBox__yvs0F = \"PlasmicFeatures-module--freeBox__yvs0F--t0oF+\";\nexport var h1 = \"PlasmicFeatures-module--h1--Ft5Ac\";\nexport var h3__qtbC3 = \"PlasmicFeatures-module--h3__qtbC3--fglFm\";\nexport var h3__yNiGv = \"PlasmicFeatures-module--h3__yNiGv--NZkf1\";\nexport var h5__bsltE = \"PlasmicFeatures-module--h5__bsltE--YsKlU\";\nexport var h5__fGPsq = \"PlasmicFeatures-module--h5__fGPsq--Ryv+g\";\nexport var h5__jlvLi = \"PlasmicFeatures-module--h5__jlvLi--qq5Yg\";\nexport var h5__nXcW = \"PlasmicFeatures-module--h5__nXcW--Jiqps\";\nexport var header = \"PlasmicFeatures-module--header--i9Lj8\";\nexport var heroSection = \"PlasmicFeatures-module--heroSection--wtD5N\";\nexport var img__jF3Li = \"PlasmicFeatures-module--img__jF3Li--X94Qx\";\nexport var img__osQQm = \"PlasmicFeatures-module--img__osQQm--Llnmx\";\nexport var pageBanner = \"PlasmicFeatures-module--pageBanner--mm58H\";\nexport var root = \"PlasmicFeatures-module--root--hsTaQ\";\nexport var section = \"PlasmicFeatures-module--section--2asNd\";\nexport var svg___6Qn2Z = \"PlasmicFeatures-module--svg___6Qn2Z--QVCee\";\nexport var svg__boOo = \"PlasmicFeatures-module--svg__boOo--NWDXH\";\nexport var svg__gU9Bg = \"PlasmicFeatures-module--svg__gU9Bg--sBGd3\";\nexport var svg__omRvH = \"PlasmicFeatures-module--svg__omRvH--alpzV\";\nexport var svg__pSXs3 = \"PlasmicFeatures-module--svg__pSXs3--JwfaO\";\nexport var svg__sDqCu = \"PlasmicFeatures-module--svg__sDqCu--DhJ1Y\";\nexport var svg__yfjPy = \"PlasmicFeatures-module--svg__yfjPy--2xf5+\";\nexport var text___6Yyp9 = \"PlasmicFeatures-module--text___6Yyp9--VMo8I\";\nexport var text___7WtsC = \"PlasmicFeatures-module--text___7WtsC--J7keA\";\nexport var text___9ZAvi = \"PlasmicFeatures-module--text___9ZAvi--WHkrF\";\nexport var text__c5S0S = \"PlasmicFeatures-module--text__c5S0S--dRH-5\";\nexport var text__plcwe = \"PlasmicFeatures-module--text__plcwe---Hdlw\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon16Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8-1.41-1.42z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon16Icon\n/* prettier-ignore-end */\n","export default __webpack_public_path__ + \"static/williamHook9E9Pd9BlAtoUnsplashjpg-5b6151bc782d4075dd7b022c4cee8554.jpeg\";","export default __webpack_public_path__ + \"static/_3Thumbjpg-943e37d3b9b17b7a46792f9e0c2c9024.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: RfeOQGqsP9x0OF\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: GiBoz5mPYbhbH5/component\nimport Button from \"../../Button\" // plasmic-import: FThbuefNiac0C/component\nimport HeroSection from \"../../HeroSection\" // plasmic-import: -OzwMuddIFsAXB/component\nimport Footer from \"../../Footer\" // plasmic-import: UCdzYIWgs-f8ml/component\nimport { useScreenVariants as useScreenVariantsj0Zyv8Tr7BOtZ2 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: j0Zyv8Tr7BOtZ2/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicFeatures.module.css\" // plasmic-import: RfeOQGqsP9x0OF/css\nimport Icon16Icon from \"./icons/PlasmicIcon__Icon16\" // plasmic-import: NQfuECH3tktxt8/icon\nimport ArrowRightsvgIcon from \"./icons/PlasmicIcon__ArrowRightsvg\" // plasmic-import: S5xRGvVGtklZAi/icon\nimport williamHook9E9Pd9BlAtoUnsplashjpg1JpECULbcx4P from \"./images/williamHook9E9Pd9BlAtoUnsplashjpg.jpeg\" // plasmic-import: 1Jp-eC-uLBCX4p/picture\nimport _3ThumbjpgMzQjSwr1Hsr8B0 from \"./images/_3Thumbjpg.jpeg\" // plasmic-import: mzQjSwr1HSR8B0/picture\n\nexport const PlasmicFeatures__VariantProps = new Array()\n\nexport const PlasmicFeatures__ArgProps = new Array()\n\nfunction PlasmicFeatures__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsj0Zyv8Tr7BOtZ2(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"pageBanner\"}\n            data-plasmic-override={overrides.pageBanner}\n            className={classNames(projectcss.all, sty.pageBanner)}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__kCr2W)}>\n              <p.Stack\n                as={\"div\"}\n                data-plasmic-name={\"columns\"}\n                data-plasmic-override={overrides.columns}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns)}\n              >\n                <div className={classNames(projectcss.all, sty.column__lngKl)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__yjh7)}\n                  >\n                    <h1\n                      data-plasmic-name={\"h1\"}\n                      data-plasmic-override={overrides.h1}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1\n                      )}\n                    >\n                      {\"Our Features \"}\n                    </h1>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__plcwe\n                      )}\n                    >\n                      {\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\"\n                      }\n                    </div>\n                  </p.Stack>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column___9Dwnq)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__jF3Li)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\n                      hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"100%\"\n                        : \"100%\"\n                    }\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    loading={\n                      hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"lazy\"\n                        : \"lazy\"\n                    }\n                    src={\n                      hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? {\n                            src: _3ThumbjpgMzQjSwr1Hsr8B0,\n                            fullWidth: 700,\n                            fullHeight: 466,\n                            aspectRatio: undefined,\n                          }\n                        : {\n                            src: williamHook9E9Pd9BlAtoUnsplashjpg1JpECULbcx4P,\n                            fullWidth: 1920,\n                            fullHeight: 1280,\n                            aspectRatio: undefined,\n                          }\n                    }\n                  />\n                </div>\n              </p.Stack>\n            </div>\n          </div>\n\n          <div className={classNames(projectcss.all, sty.freeBox__yogKr)}>\n            <p.Stack\n              as={\"section\"}\n              data-plasmic-name={\"section\"}\n              data-plasmic-override={overrides.section}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.section)}\n            >\n              <p.Stack\n                as={\"div\"}\n                data-plasmic-name={\"foreground\"}\n                data-plasmic-override={overrides.foreground}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.foreground)}\n              >\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__jRme)}\n                >\n                  <h3\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h3,\n                      projectcss.__wab_text,\n                      sty.h3__yNiGv\n                    )}\n                  >\n                    {\"The standard Lorem Ipsum passage\"}\n                  </h3>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text___9ZAvi\n                    )}\n                  >\n                    {\n                      \"Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies.\"\n                    }\n                  </div>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text___7WtsC\n                    )}\n                  >\n                    {\n                      \"Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies.\"\n                    }\n                  </div>\n                </p.Stack>\n\n                <div className={classNames(projectcss.all, sty.freeBox__kSbp)}>\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__f89Fs)}\n                  >\n                    <h5\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h5,\n                        projectcss.__wab_text,\n                        sty.h5__jlvLi\n                      )}\n                    >\n                      {\"Built on capability\"}\n                    </h5>\n\n                    <Icon16Icon\n                      className={classNames(projectcss.all, sty.svg__yfjPy)}\n                      role={\"img\"}\n                    />\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__oyMq6)}\n                  >\n                    <h5\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h5,\n                        projectcss.__wab_text,\n                        sty.h5__yaL17\n                      )}\n                    >\n                      {\"Highly energetic\"}\n                    </h5>\n\n                    <Icon16Icon\n                      className={classNames(projectcss.all, sty.svg__boOo)}\n                      role={\"img\"}\n                    />\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox___5S1R)}\n                  >\n                    <h5\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h5,\n                        projectcss.__wab_text,\n                        sty.h5__fGPsq\n                      )}\n                    >\n                      {\"100% transparency and accountability\"}\n                    </h5>\n\n                    <Icon16Icon\n                      className={classNames(projectcss.all, sty.svg__gU9Bg)}\n                      role={\"img\"}\n                    />\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__cvzAg)}\n                  >\n                    <h5\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h5,\n                        projectcss.__wab_text,\n                        sty.h5__nXcW\n                      )}\n                    >\n                      {\"Refreshing clarity\"}\n                    </h5>\n\n                    <Icon16Icon\n                      className={classNames(projectcss.all, sty.svg__sDqCu)}\n                      role={\"img\"}\n                    />\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__q5IMa)}\n                  >\n                    <h5\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h5,\n                        projectcss.__wab_text,\n                        sty.h5__bsltE\n                      )}\n                    >\n                      {\"Modern results\"}\n                    </h5>\n\n                    <Icon16Icon\n                      className={classNames(projectcss.all, sty.svg__pSXs3)}\n                      role={\"img\"}\n                    />\n                  </div>\n                </div>\n              </p.Stack>\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__oiQ03)}>\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__ai4Qm)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__n2J7X)}>\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__y6DTb)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___8MNwI\n                      )}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        data-plasmic-name={\"copy\"}\n                        data-plasmic-override={overrides.copy}\n                        hasGap={true}\n                        className={classNames(projectcss.all, sty.copy)}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__yvs0F\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__c5S0S\n                            )}\n                          >\n                            {\"Welcome\"}\n                          </div>\n\n                          <h3\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.h3,\n                              projectcss.__wab_text,\n                              sty.h3__qtbC3\n                            )}\n                          >\n                            {\"The standard Lorem \"}\n                          </h3>\n\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text___6Yyp9\n                            )}\n                          >\n                            {\n                              \"Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies.\"\n                            }\n                          </div>\n                        </p.Stack>\n\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__xdlYy\n                          )}\n                        >\n                          <Button\n                            data-plasmic-name={\"button\"}\n                            data-plasmic-override={overrides.button}\n                            className={classNames(\"__wab_instance\", sty.button)}\n                            color={\"blue\"}\n                            endIcon={\n                              <ArrowRightsvgIcon\n                                className={classNames(\n                                  projectcss.all,\n                                  sty.svg___6Qn2Z\n                                )}\n                                role={\"img\"}\n                              />\n                            }\n                            shape={\"rounded\"}\n                            showEndIcon={true}\n                          >\n                            {\"Start Now\"}\n                          </Button>\n                        </p.Stack>\n                      </p.Stack>\n                    </p.Stack>\n                  </div>\n\n                  <div\n                    data-plasmic-name={\"art\"}\n                    data-plasmic-override={overrides.art}\n                    className={classNames(projectcss.all, sty.art)}\n                  >\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__osQQm)}\n                      displayHeight={\"100%\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"100%\"}\n                      src={\n                        \"https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2851&q=80\"\n                      }\n                    />\n\n                    <div\n                      className={classNames(projectcss.all, sty.freeBox__lo0Os)}\n                    />\n                  </div>\n                </div>\n              </p.Stack>\n            </div>\n          </div>\n\n          <HeroSection\n            data-plasmic-name={\"heroSection\"}\n            data-plasmic-override={overrides.heroSection}\n            className={classNames(\"__wab_instance\", sty.heroSection)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"pageBanner\",\n    \"columns\",\n    \"h1\",\n    \"section\",\n    \"foreground\",\n    \"copy\",\n    \"button\",\n    \"art\",\n    \"heroSection\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  pageBanner: [\"pageBanner\", \"columns\", \"h1\"],\n  columns: [\"columns\", \"h1\"],\n  h1: [\"h1\"],\n  section: [\"section\", \"foreground\"],\n  foreground: [\"foreground\"],\n  copy: [\"copy\", \"button\"],\n  button: [\"button\"],\n  art: [\"art\"],\n  heroSection: [\"heroSection\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicFeatures__ArgProps,\n          internalVariantPropNames: PlasmicFeatures__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicFeatures__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFeatures\"\n  } else {\n    func.displayName = `PlasmicFeatures.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFeatures = Object.assign(\n  // Top-level PlasmicFeatures renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    pageBanner: makeNodeComponent(\"pageBanner\"),\n    columns: makeNodeComponent(\"columns\"),\n    h1: makeNodeComponent(\"h1\"),\n    section: makeNodeComponent(\"section\"),\n    foreground: makeNodeComponent(\"foreground\"),\n    copy: makeNodeComponent(\"copy\"),\n    button: makeNodeComponent(\"button\"),\n    art: makeNodeComponent(\"art\"),\n    heroSection: makeNodeComponent(\"heroSection\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicFeatures\n    internalVariantProps: PlasmicFeatures__VariantProps,\n    internalArgProps: PlasmicFeatures__ArgProps,\n  }\n)\n\nexport default PlasmicFeatures\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFeatures } from \"../components/plasmic/saa_s_website/PlasmicFeatures\"\n\nfunction Features() {\n  // Use PlasmicFeatures to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFeatures are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicFeatures is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicFeatures />\n}\n\nexport default Features\n"],"names":["PlasmicHeader__VariantProps","Array","PlasmicHeader__ArgProps","PlasmicDescendants","root","freeBox","header2","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","ph","Object","assign","args","className","classNames","projectcss","Header2","PlasmicHeader__RenderFunc","displayName","PlasmicHeader","internalVariantProps","internalArgProps","Header_","ref","PlasmicHeroSection__VariantProps","PlasmicHeroSection__ArgProps","columns","column","h2","text","button","svg","Button","color","endIcon","role","shape","showEndIcon","PlasmicHeroSection__RenderFunc","PlasmicHeroSection","HeroSection_","style","title","restProps","xmlns","viewBox","height","width","fill","d","art","column___9Dwnq","column__lngKl","copy","footer","foreground","freeBox___5S1R","freeBox___8MNwI","freeBox__ai4Qm","freeBox__cvzAg","freeBox__f89Fs","freeBox__jRme","freeBox__kCr2W","freeBox__kSbp","freeBox__lo0Os","freeBox__n2J7X","freeBox__oiQ03","freeBox__oyMq6","freeBox__q5IMa","freeBox__xdlYy","freeBox__y6DTb","freeBox__yjh7","freeBox__yogKr","freeBox__yvs0F","h1","h3__qtbC3","h3__yNiGv","h5__bsltE","h5__fGPsq","h5__jlvLi","h5__nXcW","header","heroSection","img__jF3Li","img__osQQm","pageBanner","section","svg___6Qn2Z","svg__boOo","svg__gU9Bg","svg__pSXs3","svg__sDqCu","svg__yfjPy","text___6Yyp9","text___7WtsC","text___9ZAvi","text__c5S0S","text__plcwe","PlasmicFeatures__VariantProps","PlasmicFeatures__ArgProps","globalVariants","ensureGlobalVariants","screen","useScreenVariantsj0Zyv8Tr7BOtZ2","as","hasGap","sty","Header","alt","displayHeight","displayMaxHeight","displayMaxWidth","hasVariant","displayMinHeight","displayMinWidth","displayWidth","loading","src","_3ThumbjpgMzQjSwr1Hsr8B0","fullWidth","fullHeight","aspectRatio","undefined","williamHook9E9Pd9BlAtoUnsplashjpg1JpECULbcx4P","HeroSection","Footer","PlasmicFeatures__RenderFunc","PlasmicFeatures"],"sourceRoot":""}
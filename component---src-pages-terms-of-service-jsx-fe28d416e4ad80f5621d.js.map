{"version":3,"file":"component---src-pages-terms-of-service-jsx-fe28d416e4ad80f5621d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicTermsOfServices.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/PlasmicTermsOfServices.module.css","webpack://gatsby-starter-default/./src/pages/terms-of-service.jsx","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/corinneKutzTMi2R5NfoUnsplashjpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/saa_s_website/images/greenChameleonS9Cc2SKySjmUnsplashjpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: GiBoz5mPYbhbH5\nimport * as React from \"react\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Header2 from \"../../Header2\" // plasmic-import: k7o7R5KA05BDU1/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: GiBoz5mPYbhbH5/css\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        <Header2\n          data-plasmic-name={\"header2\"}\n          data-plasmic-override={overrides.header2}\n          className={classNames(\"__wab_instance\", sty.header2)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\", \"header2\"],\n  freeBox: [\"freeBox\", \"header2\"],\n  header2: [\"header2\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeader__ArgProps,\n          internalVariantPropNames: PlasmicHeader__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    header2: makeNodeComponent(\"header2\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox = \"PlasmicHeader-module--freeBox--JX88q\";\nexport var header2 = \"PlasmicHeader-module--header2--2SeCb\";\nexport var root = \"PlasmicHeader-module--root--O1cys\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/saa_s_website/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 9n35eQz37vKHQeuCHXPHwo\n// Component: 5IljxdVP5mSmVC\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: GiBoz5mPYbhbH5/component\nimport Footer from \"../../Footer\" // plasmic-import: UCdzYIWgs-f8ml/component\nimport { useScreenVariants as useScreenVariantsj0Zyv8Tr7BOtZ2 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: j0Zyv8Tr7BOtZ2/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_saa_s_website.module.css\" // plasmic-import: 9n35eQz37vKHQeuCHXPHwo/projectcss\nimport * as sty from \"./PlasmicTermsOfServices.module.css\" // plasmic-import: 5IljxdVP5mSmVC/css\nimport greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo from \"./images/greenChameleonS9Cc2SKySjmUnsplashjpg.jpeg\" // plasmic-import: -MuyYbjUpLS1Eo/picture\nimport corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6 from \"./images/corinneKutzTMi2R5NfoUnsplashjpg.jpeg\" // plasmic-import: xcdVvFVkT2X8J6/picture\n\nexport const PlasmicTermsOfServices__VariantProps = new Array()\n\nexport const PlasmicTermsOfServices__ArgProps = new Array()\n\nfunction PlasmicTermsOfServices__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsj0Zyv8Tr7BOtZ2(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"mainSection\"}\n            data-plasmic-override={overrides.mainSection}\n            className={classNames(projectcss.all, sty.mainSection)}\n          >\n            <div\n              data-plasmic-name={\"pageBanner\"}\n              data-plasmic-override={overrides.pageBanner}\n              className={classNames(projectcss.all, sty.pageBanner)}\n            >\n              <div className={classNames(projectcss.all, sty.freeBox__lwP7C)}>\n                <p.Stack\n                  as={\"div\"}\n                  data-plasmic-name={\"columns\"}\n                  data-plasmic-override={overrides.columns}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.columns)}\n                >\n                  <div className={classNames(projectcss.all, sty.column__sLsQ)}>\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__hG26)}\n                    >\n                      <h1\n                        data-plasmic-name={\"h1\"}\n                        data-plasmic-override={overrides.h1}\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h1,\n                          projectcss.__wab_text,\n                          sty.h1\n                        )}\n                      >\n                        {\"Terms of Service\"}\n                      </h1>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__q5EyZ\n                        )}\n                      >\n                        {\n                          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\"\n                        }\n                      </div>\n                    </p.Stack>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.column__lisAz)}\n                  >\n                    <p.PlasmicImg\n                      data-plasmic-name={\"img\"}\n                      data-plasmic-override={overrides.img}\n                      alt={\"\"}\n                      className={classNames(sty.img)}\n                      displayHeight={\"auto\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"100%\"\n                          : \"100%\"\n                      }\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"auto\"}\n                      loading={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"lazy\"\n                          : \"lazy\"\n                      }\n                      src={\n                        hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? {\n                              src: corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }\n                          : {\n                              src: greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }\n                      }\n                    />\n                  </div>\n                </p.Stack>\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-plasmic-name={\"mainSection2\"}\n            data-plasmic-override={overrides.mainSection2}\n            className={classNames(projectcss.all, sty.mainSection2)}\n          >\n            <div\n              data-plasmic-name={\"container3\"}\n              data-plasmic-override={overrides.container3}\n              className={classNames(projectcss.all, sty.container3)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__fiuWi)}\n              >\n                <h3\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.h3,\n                    projectcss.__wab_text,\n                    sty.h3__bfvwH\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Professional And\\nDedicated Consulting Services...\"\n                    : \"Terms of Service heading lorem\"}\n                </h3>\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text___8AaAn\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"\n                    : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"}\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__qIiSi)}\n              >\n                <h3\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.h3,\n                    projectcss.__wab_text,\n                    sty.h3__tOzGm\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Professional And\\nDedicated Consulting Services...\"\n                    : \"Lorem Heading main privacy policy\"}\n                </h3>\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__qqKxR\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"\n                    : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"}\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__pWlb1)}\n              >\n                <h3\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.h3,\n                    projectcss.__wab_text,\n                    sty.h3__zp61W\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Professional And\\nDedicated Consulting Services...\"\n                    : \"Lorem Heading main privacy policy\"}\n                </h3>\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text___2Slxm\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"\n                    : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"}\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__nD3Gi)}\n              >\n                <h3\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.h3,\n                    projectcss.__wab_text,\n                    sty.h3__y7W7\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Professional And\\nDedicated Consulting Services...\"\n                    : \"Lorem Heading main privacy policy\"}\n                </h3>\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__wOjf\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"\n                    : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a metus quis lorem malesuada luctus. Cras lacinia, eros at dapibus molestie, risus tortor pretium ligula, eu malesuada tortor eros dapibus mi. Proin laoreet efficitur suscipit. Donec molestie volutpat euismod. Nulla gravida ligula in eros facilisis, sed dignissim tellus aliquam. Etiam convallis enim nisi, at suscipit tortor pulvinar at. \"}\n                </div>\n              </p.Stack>\n            </div>\n          </div>\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"mainSection\",\n    \"pageBanner\",\n    \"columns\",\n    \"h1\",\n    \"img\",\n    \"mainSection2\",\n    \"container3\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  mainSection: [\"mainSection\", \"pageBanner\", \"columns\", \"h1\", \"img\"],\n  pageBanner: [\"pageBanner\", \"columns\", \"h1\", \"img\"],\n  columns: [\"columns\", \"h1\", \"img\"],\n  h1: [\"h1\"],\n  img: [\"img\"],\n  mainSection2: [\"mainSection2\", \"container3\"],\n  container3: [\"container3\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicTermsOfServices__ArgProps,\n          internalVariantPropNames: PlasmicTermsOfServices__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicTermsOfServices__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTermsOfServices\"\n  } else {\n    func.displayName = `PlasmicTermsOfServices.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTermsOfServices = Object.assign(\n  // Top-level PlasmicTermsOfServices renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    mainSection: makeNodeComponent(\"mainSection\"),\n    pageBanner: makeNodeComponent(\"pageBanner\"),\n    columns: makeNodeComponent(\"columns\"),\n    h1: makeNodeComponent(\"h1\"),\n    img: makeNodeComponent(\"img\"),\n    mainSection2: makeNodeComponent(\"mainSection2\"),\n    container3: makeNodeComponent(\"container3\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicTermsOfServices\n    internalVariantProps: PlasmicTermsOfServices__VariantProps,\n    internalArgProps: PlasmicTermsOfServices__ArgProps,\n  }\n)\n\nexport default PlasmicTermsOfServices\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicTermsOfServices-module--__wab_img-spacer--vAsvC\";\nexport var column__lisAz = \"PlasmicTermsOfServices-module--column__lisAz--Lg5ih\";\nexport var column__sLsQ = \"PlasmicTermsOfServices-module--column__sLsQ--5Qpci\";\nexport var columns = \"PlasmicTermsOfServices-module--columns--UHVVs\";\nexport var container3 = \"PlasmicTermsOfServices-module--container3--RCc7j\";\nexport var footer = \"PlasmicTermsOfServices-module--footer--Hbos7\";\nexport var freeBox__fiuWi = \"PlasmicTermsOfServices-module--freeBox__fiuWi--TdRmG\";\nexport var freeBox__hG26 = \"PlasmicTermsOfServices-module--freeBox__hG26--SaIGR\";\nexport var freeBox__lwP7C = \"PlasmicTermsOfServices-module--freeBox__lwP7C--aQ0Y4\";\nexport var freeBox__nD3Gi = \"PlasmicTermsOfServices-module--freeBox__nD3Gi--eoDf-\";\nexport var freeBox__pWlb1 = \"PlasmicTermsOfServices-module--freeBox__pWlb1--Mvh3z\";\nexport var freeBox__qIiSi = \"PlasmicTermsOfServices-module--freeBox__qIiSi--Ydmy4\";\nexport var h1 = \"PlasmicTermsOfServices-module--h1--Fyid-\";\nexport var h3__bfvwH = \"PlasmicTermsOfServices-module--h3__bfvwH--3c92F\";\nexport var h3__tOzGm = \"PlasmicTermsOfServices-module--h3__tOzGm--usCMl\";\nexport var h3__y7W7 = \"PlasmicTermsOfServices-module--h3__y7W7--QKDlX\";\nexport var h3__zp61W = \"PlasmicTermsOfServices-module--h3__zp61W--mPGVI\";\nexport var header = \"PlasmicTermsOfServices-module--header--T-B0l\";\nexport var img = \"PlasmicTermsOfServices-module--img--4uGyB\";\nexport var mainSection = \"PlasmicTermsOfServices-module--mainSection--Y9-p+\";\nexport var mainSection2 = \"PlasmicTermsOfServices-module--mainSection2--Sfl0O\";\nexport var pageBanner = \"PlasmicTermsOfServices-module--pageBanner--9wFeH\";\nexport var root = \"PlasmicTermsOfServices-module--root--mkbCt\";\nexport var text___2Slxm = \"PlasmicTermsOfServices-module--text___2Slxm--Tlstk\";\nexport var text___8AaAn = \"PlasmicTermsOfServices-module--text___8AaAn--AHljp\";\nexport var text__q5EyZ = \"PlasmicTermsOfServices-module--text__q5EyZ--ziQkR\";\nexport var text__qqKxR = \"PlasmicTermsOfServices-module--text__qqKxR--3gNGv\";\nexport var text__wOjf = \"PlasmicTermsOfServices-module--text__wOjf--g8JhR\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicTermsOfServices } from \"../components/plasmic/saa_s_website/PlasmicTermsOfServices\"\n\nfunction TermsOfServices() {\n  // Use PlasmicTermsOfServices to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicTermsOfServices are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicTermsOfServices is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicTermsOfServices />\n}\n\nexport default TermsOfServices\n","export default __webpack_public_path__ + \"static/corinneKutzTMi2R5NfoUnsplashjpg-449c04251b8d2fc379b496513143fb3b.jpeg\";","export default __webpack_public_path__ + \"static/greenChameleonS9Cc2SKySjmUnsplashjpg-a3c9cb49e26ed1102271968022eeb7b0.jpeg\";"],"names":["PlasmicHeader__VariantProps","Array","PlasmicHeader__ArgProps","PlasmicDescendants","root","freeBox","header2","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","ph","Object","assign","args","className","classNames","projectcss","Header2","PlasmicHeader__RenderFunc","displayName","PlasmicHeader","internalVariantProps","internalArgProps","Header_","ref","PlasmicTermsOfServices__VariantProps","PlasmicTermsOfServices__ArgProps","header","mainSection","pageBanner","columns","h1","img","mainSection2","container3","footer","globalVariants","ensureGlobalVariants","screen","useScreenVariantsj0Zyv8Tr7BOtZ2","as","hasGap","Header","alt","displayHeight","displayMaxHeight","displayMaxWidth","hasVariant","displayMinHeight","displayMinWidth","displayWidth","loading","src","corinneKutzTMi2R5NfoUnsplashjpgXcdVvFVkT2X8J6","fullWidth","fullHeight","aspectRatio","undefined","greenChameleonS9Cc2SKySjmUnsplashjpgMuyYbjUpLs1Eo","Footer","PlasmicTermsOfServices__RenderFunc","PlasmicTermsOfServices"],"sourceRoot":""}